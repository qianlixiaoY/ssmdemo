<?xml version="1.0" encoding="UTF-8"?>
 <beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xsi:schemaLocation="  
    http://www.springframework.org/schema/beans  
    http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
    http://www.springframework.org/schema/context  
    http://www.springframework.org/schema/context/spring-context-4.0.xsd  
    http://www.springframework.org/schema/mvc    
    http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">  
  
    <!-- 默认的注解映射的支持 -->  
    <mvc:annotation-driven />
    
    <bean id="stringHttpMessageConverter"
		class="org.springframework.http.converter.StringHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>application/json;charset=UTF-8</value>
				<value>text/json;charset=UTF-8</value>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
    <bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>application/json;charset=UTF-8</value>
				<value>text/html;charset=UTF-8</value>
				<value>application/javascript;charset=UTF-8</value>
			</list>
		</property>
	</bean>  
    
    <!-- 此配置是为了支持返回JSON格式的数据，一定要配置在Controller扫描之前 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />
				<bean
					class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
				<bean
					class="org.springframework.http.converter.StringHttpMessageConverter" />
				<bean
					class="org.springframework.http.converter.ResourceHttpMessageConverter" />
			</list>
		</property>
	</bean>
  
    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->  
    <context:component-scan base-package="yhl.controller" /> 
    <context:component-scan base-package="yhl.service"/>  
   
    <import resource="classpath:springmvc-resteasy.xml"/>
    <!-- 静态资源不拦截 -->
	<mvc:resources mapping="/*.html" location="/" />
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<mvc:resources mapping="/uploads/**" location="/uploads/" />
	<mvc:resources mapping="/images/**" location="/images/"
		cache-period="31556926" />
	<mvc:resources mapping="/icon/**" location="/icon/"
		cache-period="31556926" />
	<mvc:resources mapping="/js/**" location="/js/"
		cache-period="31556926" />
	<mvc:resources mapping="/css/**" location="/css/"
		cache-period="31556926" />
	<!-- DispatcherServlet不会拦截以/static开头的所有请求路径 -->
	<mvc:resources location="/static/" mapping="/static/**"/>

  
  <!-- 新加入的 -->
   <mvc:annotation-driven/>  
    <!-- 配置自定扫描包 -->  
    
    <!-- 定义跳转的文件的前后缀 ，视图模式配置 -->  
    <bean  
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <!-- 给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->  
        <property name="prefix" value="/WEB-INF/jsp/" />  
        <property name="suffix" value=".jsp" />  
    </bean> 
     
	  <!-- 新加入的 -->
	  <!-- 两个标准配置 -->
	<!-- 将springmvc不能处理的请求交给tomcat ,处理静态资源-->
	<mvc:default-servlet-handler/>
	
	
    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->  
    <bean id="multipartResolver"  
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <!-- 默认编码 -->  
        <property name="defaultEncoding" value="utf-8" />  
        <!-- 文件大小最大值 -->  
        <property name="maxUploadSize" value="10485760000" />  
        <!-- 内存中的最大值 -->  
        <property name="maxInMemorySize" value="40960" />  
    </bean>  
  
</beans>